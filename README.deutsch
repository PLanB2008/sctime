-*- mode: org; coding: utf-8 -*-

sctime ist eine Qt-basierte GUI zur Erfassung von Arbeitszeit und
Bereitschaftszeiten.

Dieser Text enthält Informationen für Administratoren und für Entwickler.

* Voraussetzungen fürs Übersetzen
  Qt-Entwicklerpaket >= 4.4 (SuSE-Pakete "libqt4-devel" und "-doc")

  Zum Entwickeln empfohlene IDE: qtcreator (Paket "qt-creator").
  Achtung: Man kann nicht unter Windows und UNIX gleichzeitig auf dem gleichen
  Verzeichnis mit qtcreator arbeiten. Selbst abwechselndes Arbeit auf einem
  Verzeichnis ist nicht schön.

  ** Zusätzliche Voraussetzungen fürs Übersetzen unter Windows

  Unter Windows sollte man noch eine der Bibliotheken zum Datenbankzugriff
  mit einpacken: "qsqlodbc4.dll" and/or "qsqlpsql4.dll" (QT
  plugins/sqldrivers). Die muss man selber übersetzen (siehe Qt-Doku) oder aus
  einem "commercial"-Qt-Entwicklerpaket nehmen (s.u.)

  Getestet ist das Bauen mit Visual Studio 2008.

* Abhängigkeiten zur Laufzeit

** Windows
   Nur wenn der ODBC-Zugriff verwendet wird, muss der Postgres-ODBC-Treiber
   installier sein. Ansonsten sollte alles Notwendige im .msi enthalten sein.

** UNIX
   Qt-Laufzeitbibliotheken >= 4.4

   Wenn "sctime" mit Qt 4.7 kompiliert ist, funktioniert es nicht auf Rechnern
   mit Qt4.4. Siehe im Menü "Hife" -> "Über sctime...".

   Um die Liste der Zeitkonten abzurufen, kann "sctime" nur unter UNIX die
   Kommandos "zeitkonten" und "zeitbereitls" verwenden. Vorzugsweise verwendet
   "sctime" jedoch eventuell installierte Module für den Datenbankzugriff
   ("qsqlpsql.so" oder Ähnliches). Diese Module muss dann der Admin
   installieren. Bei openSuSE heißt das Paket "libqt4-sql-postgresql".

* Weitere Dokumentation

  - im Unterverzeichnis "help/": die Online-Hilfe

  - im Unterverzeichnis "doc/"


* Windows-Build

** Notwendige Dateien

Die notwendigen Dateien/Konfigurationen für den Datenbankzugriff im Überblick:

- QtSql4.dll
- sqldrivers\qsqlodbc4.dll und/oder sqldrivers\qsqlpsql4.dll

Aus dem "plugins"-Verzeichnis der kommerziellen Qt-Distribution brraucht man
das "sqldrivers"-Verzeichnis mit den Dateien "qsqlodbc4.dll" (für ODBC) oder
"qsqlpsql4.dll" (für den direkten Zugriff auf Postgres-Datenbanken).

Weitere notwendige Bibliotheken:

- QtGui4.dll
- QtXml4.dll
- QtCore4.dll
- QtSql4.dll (siehe oben)
- QtNetwork4.dll

- Microsoft Visual C++ 2008 SDK

- qt_de.qm: notfalls per "lrlease" aus "qt_de.ts" generieren

** "shadow" / "out of source"-Build mit Visual Studio 2008

Ein eigenes Verzeichnis anlegen, dann dort in einer Shell mit
Qt-Umgebungsvariablen:

$ qmake -tp vc -r QUELLVERZEICHNIS\sctime.pro

Dann die "solution" öffnen:
- sctime.sln
oder (gleich?)
- Visual Studio in dieser Umgebung öffnen

Danach unter "Build"/"Configuration Manager" auf "Release" umstellen. Für
die Konfiguration "Debug" braucht man nämlich die Debug-Bibliotheken, die
vielleicht nicht installiert sind.

Einzeilschritt-Abarbeitung (Debuggen) scheint nicht möglich: "Access violation"

** MSI-Paket bauen

http://appdeveloper.intel.com/en-us/article/how-creating-your-msi-installer-using-visual-studio-2008

Die meisten Abhängigkeiten werden automatisch erkannt. Ein paar muss man noch
händisch hinzufügen.

So sollte das MSI-Projekt in etwa aussehen:


Per "View"->"File System"
Application Folder
- sqldrivers (Folder)
  - qsqlodbc4.dll
  - qsqlpsql4.dll
- Primary Ouput from sctime (Active)
- qt_de.qm
- QtCore4.dll
- QtGui4.dll
- QtNetwork4.dll
- QtSql4.dll
- QtXml4.dll
- Uhr.ico

User's Programs Menu
- Sctime (Shortcut)



zur Kontrolle die Ansicht im "Solution Explorer"

sctime-setup
- "Detected Dependencies":
  - policy_9_0_Microsoft_VC90_CRT_x86.msm
  - QtCore4.dll
  - QtGui4.dll
  - QtNetwork4.dll
  - QtSql4.dll
  - QtXml4.dll
- Primary Ouput from sctime (Active)
- Microsoft_VC90_CRT_x86.msm
- qsqlodbc4.dll
- qsqlpsql4.dll
- Uhr.ico
- qt_de.qm


Mit F4 auf der Projekt-Eintrag erhält man das "Properties Window", das sich
komplett von dem Fenster unterscheidet, das man mit Rechtsklick->"Properties"
erhält.
